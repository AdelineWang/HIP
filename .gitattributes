import time
import transmit
import sdl2
import sdl2.ext

joystick = None

#speed = 1

def startup():
    sdl2.ext.init()
def shutdown():
    sdl2.ext.quit()

def robotgo(drive_speed,turn_speed,lights=(0,0,0)):
    "drive and turn in ms, rad/s"
    
    message="%4.3f %4.3f %d %d %d"%(drive_speed,turn_speed, lights[0],lights[1],lights[2])
    print(message)
    transmit.send_request(message)
    time.sleep(0.1)

#print("robot lights : %d %d %d"%lights)
    
def run(): 
    #window = sdl2.ext.Window("The Joystick Game", size=(800, 600))
    #window.show()
    running = True
    direction = " "
    startTime = 0
    state = 0     # 0 = has not run yet, 1 = running, 2 = stopped
    while running and (time.time() - startTime ):
        events = sdl2.ext.get_events()
    
        drive=0.0
        turn=0.0
        lighta = 0
        lightb = 0
        lightc = 0
        
        for k in range(2):
            valk=float(sdl2.SDL_JoystickGetAxis(joystick,k))    #Value generated by the joystick
            if k == 1: #y-axis
                if valk > 1000:
                    direction= valk/float(-32767.0)
                elif valk < -1000:
                    direction= valk/float(-32768.0)
                else:
                    direction= 0
                
                #print("Axis %d: %f"%(k,direction))
                drive=direction
                #turn=direction
            elif k == 0: #x-axis
                if valk > 1000:
                    direction = valk/float(32767.0)
                elif valk < -1000:
                    direction = valk/float(32768.0)
                else:
                    direction = 0
                #print("Axis %d: %f"%(k,direction))
                turn=direction
                #drive=direction
            if drive && turn != 0 && state == 0:      # if there is movement
                startTime = time.time() # get the start time
                state = 1       # state = running

        lightc=sdl2.SDL_JoystickGetButton(joystick,2)
        lightb=sdl2.SDL_JoystickGetButton(joystick,1)
        lighta=sdl2.SDL_JoystickGetButton(joystick,0)
  
        for event in events:
            if event.type == sdl2.SDL_QUIT:
                running = False
                break
            #elif event.type == sdl2.SDL_JOYAXISMOTION:
                #axis = event.jaxis.which
                #location = event.jaxis.value

                print("Joystick event: axis=%s location=%s "%(axis,location))
             
            elif event.type == sdl2.SDL_JOYBUTTONDOWN:
                print("Joystick button pressed %s"%event.jaxis.value)
            elif event.type == sdl2.SDL_JOYBUTTONUP:
                print("Joystick button released %s"%event.jaxis.value)
            else:
                print("Unknown event: ",event.type)
        robotgo(drive, turn, (lighta, lightb, lightc))           
        #window.refresh()
    return 0

#def button():
    #if button1 == 0:
        #speed -= 0.2 
        
        #print("speed is now ", speed) 

     
#def button():
    #if button3 == 2:
        #speed += 0.2 
        
        #print("speed is now ", speed)

def init_joystick():
    global joystick
    sdl2.SDL_Init(sdl2.SDL_INIT_JOYSTICK)
    count =  sdl2.joystick.SDL_NumJoysticks() 
    if count < 1:
        print("no joysticks found")
        return
    print ("Found joysticks: %d"%count)
    joystick = sdl2.SDL_JoystickOpen(0)
    print("Sucess")




